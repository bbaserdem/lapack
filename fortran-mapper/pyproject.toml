[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "fortran-mapper"
version = "0.1.0"
description = "A flexible, extensible Fortran code mapper with hook-based customization"
readme = "README.md"
requires-python = ">=3.13"
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
license = {text = "MIT"}
keywords = ["fortran", "code-analysis", "graph", "neo4j", "visualization"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries",
    "Topic :: Scientific/Engineering",
]

dependencies = [
    "networkx>=2.8",
    "pydot>=1.4",
    "psutil>=5.9",
]

[project.optional-dependencies]
neo4j = ["neo4j>=5.0"]
all = ["neo4j>=5.0", "matplotlib>=3.5", "plotly>=5.0"]
visualization = ["matplotlib>=3.5", "plotly>=5.0"]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "mypy>=1.0",
    "ruff>=0.1",
]

[project.scripts]
fortran-mapper = "fortran_mapper.cli:main"

[project.entry-points."fortran_mapper.hooks"]
lapack = "fortran_mapper_hooks_lapack"

[tool.setuptools.packages.find]
where = ["src"]

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.ruff]
target-version = "py313"
line-length = 100
select = ["E", "F", "I", "N", "UP", "B", "C4", "SIM", "RUF"]
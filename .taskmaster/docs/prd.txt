# Stage 1: LAPACK AST to Neo4j Translation

## Project Overview
Develop and test Python utilities to parse LAPACK/BLAS Fortran source code, extract Abstract Syntax Trees (AST), and convert them into a Neo4j graph database format for visualization and analysis.

## Goals
- Complete and test the Python implementation for Fortran AST parsing
- Verify the graph schema design for Neo4j import
- Test all export formats (JSON, CSV, Cypher)
- Document the system for future stages

## Technical Requirements

### 1. Development Environment Setup
- Add pytest and development dependencies to pyproject.toml
- Configure uv to work with the project structure
- Ensure all dependencies are properly installed

### 2. Fortran Parser Testing
- Test the FortranParser class with real LAPACK/BLAS source files
- Verify AST extraction functionality
- Validate routine detection and call graph extraction
- Test LAPACK naming convention parsing (S/D/C/Z prefixes)
- Ensure error handling for malformed files

### 3. Graph Schema Validation
- Test GraphSchema creation from parsed routines
- Verify node types (Routine, File, Operation, Precision)
- Validate relationship types (CALLS, DEFINED_IN, IMPLEMENTS, HAS_PRECISION)
- Test schema consistency and uniqueness constraints

### 4. Export Format Testing
- Test JSON export for visualization tools
- Verify CSV export for neo4j-admin bulk import
- Validate Cypher statement generation
- Ensure all formats preserve data integrity

### 5. Integration Testing
- Parse multiple related LAPACK files
- Build complete dependency graphs
- Test with different routine types (BLAS Level 1, 2, 3, LAPACK solvers)
- Verify cross-file dependency resolution

### 6. Documentation and Examples
- Create example scripts for common use cases
- Document the graph schema structure
- Provide Neo4j query examples
- Write usage guide for the command-line tool

## Success Criteria
- All unit tests pass
- Parser successfully processes 100+ LAPACK/BLAS files
- Export formats are validated and working
- Documentation is complete and clear
- System is ready for Stage 2 (organization/reorganization)

## Dependencies
- Python 3.12+
- fortran-src (Haskell tool)
- neo4j Python driver
- pytest for testing
- Neo4j database (for final import testing)